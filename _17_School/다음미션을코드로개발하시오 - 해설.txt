제목 :  수강신청프로그램
학생이 있다. 학생은 아이디, 이름, 전화번호, 학년의 정보를 갖는다.
교과목이 있다. 과목은 과목명, 강의실, 담당교수가 있다. 

학생의 정보 : ID, 이름, 전화번호, GRADE
자료형 - string(id,이름), int(전화번호 ,grade)
교과목 : 과목명, 강의실, 담당교수
자료형 - string(과목명,담당교수) , int(강의실) 

125678


- 학생을 등록할 수 있다. <선택> 아이디는 중복될 수 없다.
  메서드(등록add, 아이디중복 - 검색search) 
  12345678 13 // 1234578 11

- 학생을 이름으로 검색할 수 있다. 동일한 이름이 모두 검색된다.
 <선택> 검색어가 이름에 포함되면 모두 검색한다.
  메서드(위에서만든 search 이름중복도 확인가능 // 리스트list)
  1,2,3,4,5,6,7,8,13 // 1,2,3,4,5,7,8,11

- 학생을 삭제 할 수 있다. 학생의 아이디로 입력하여 삭제 한다. 
  메서드(삭제delete 조건-아이디입력)
  1,2,3,4,5,6,7,8,13 // 1,2,3,4,5,7,8,11

- <선택> 학생은 10명 까지만 등록할 수 있다. **단, 배열은 사용하지 않는다.
  배열x = ArrayList 사용
  학생 10명등록
  ??? // 1, 2, 10

- 교과목을 등록할 수 있다. <선택> 과목명은 중복 될 수 없다.
  메서드(add등록 과목명중복x)
  1, 2, 

- 교과목 전체리스트를 확인 할 수 있다.
  메서드(교과목 allList)  

- 학생의 전체리스트를 확인 할 수 있다.
  메서드(학생 allList) - 수강 신청한 과목 수(숫자)

- 메인 메뉴는 학생관리, 교과목관리이다.   <선택> 로그인이 있다.
  메인메뉴 클래스(학생관리,교과목관리,로그인)

- <로그인 기능 선택> 로그인을 하면 수강신청 메뉴와 신청리스트 메뉴가 나온다.
  메인메뉴에서 로그인선택시 수강신청메뉴,신청리스트메뉴 1, 2, 5

- 학생의 전체리스트를 확인 할 때, 수강 신청한 과목의 수를 숫자로 표시한다.
  

자바 기술 Stack
1. 변수 - 원시변수와 참조변수
2. 자료형
3. 조건문
4. 반복문
5. class와 객체, 생성자
6. class 추상화
7. 메서드 정의와 호출
8. 접근제어자
9. 공용변수 static
10. 상수 : final
11. List자료형 중 ArrayList
12. JVM    
13. 싱글톤 디자인 패턴       



<해설>

전체적으로 봤을 때 틀을 잡는다.
클래스와 기능을 체크(설계)한다.
메인과,클래스를 만든다. 학생,교과목(한개의),메인메뉴(기능),메인(시작)
정보를 일단 위에서부터 아래 순으로 만듦

메인클래스는 메인메뉴를 의존한다.


학생class - 변수,자료형, class와 객체,추상화,메서드,접근제어자
String id,name,tel=null;
int grade=-1;
//추상화 요구사항의 학생을 멤버변수와 메서드로 정의
각각의 변수에는 private(접근제어자)를 사용함
getter setter 를 사용하여 메서드 만듦

학생을 등록할 수 있다. 클래스생성
// 요구사항에서 학생을 관리하는 내용을 추상화  - 학생(공통된) 추상 클래스를 생성
등록할수있는 add메서드 생성
search메서드 생성
delete메서드 생성
접근제어자 private를 사용

교과목 등록할 수 있다. 클래스생성
// 요구사항에서 교과목을 관리하는 내용을 추상화
등록할수있는 add메서드 생성
search메서드 생성
delete메서드 생성
접근제어자 private를 사용

메인메뉴 클래스는 학생관리 교과목관리 로그인의 내용을 가지고있어야 한다.
menu 메서드를 만들어
3가지를 생성

교과목 한개의 클래스를 만들어
교과목 한개의 정보(변수)를 생성
필요한 자료형과 변수로 빈공간을 생성(null,-1(arrayList를 사용하기위해))
접근제어자 private 사용
getter setter로 메서드 생성

메인메뉴에서 생성자를 생성 와일문을 생성 메뉴메서드를 와일문안에 넣고,
와일문 밖으로 스캐너 객체를 생성 init메서드를 호출
init 메서드는 null일경우 객체생성이다.
if(??? == null){xxx= new xxx}
와일문안에 메뉴선택기능을 채운다.
학생관리 교과목관리 로그인 메뉴를 만들고
메서드를 생성 
학생관리 메서드 생성시
학생관리하는 객체의 메뉴를 호출
이때 주의 할 점은 객체를 새롬 만들지 말고
기존 객체의 주소를 참조하여 메뉴를 호출
new ???(); 안됨
위와 같이 교과목관리 메서드를 생성
로그인은 잠시 미뤄두자.

학생관리는 4가지의 메뉴를 추상화한다.
학생1명의관리가 필요(의존)하므로 ArrayList 사용
리스트자료형 객체 생성

교과목관리 클래스에도 2가지의 메뉴가 필요하므로
교과목1개의관리가 필요(의존)하므로
리스트자료형 객체 생성

<로그인 기능 선택> 로그인을 하면 수강신청 메뉴와 신청리스트 메뉴가 나온다.
학생한명의 클래스에서 메뉴 메서드를 생성하여
수강신청 신청목록읆 추가(sysout출력)
자료형리스트 객체 생성

여기까지 정리 -- 
추상화를 생각해보자...
추상화는 공통된 행동,필드를 묶어 하나의 클래스를 생성하는것이다.

로그인의 <정보>는 메인메뉴에서 추상화
왜? 로그인은 학생이 하는것이지만. 
로그인 자체의 정보는 메인메뉴이다.
추상화는 어렵다. 한글은 더 어렵다. ㅠ

학생관리클래스의 기능별 메서드를 조건을 채우자

add에 객체를 생성하고 생성시 학생 1명을 참조한다.
arraylist의 기능을 생각해서 생성해보자..
갑자기 생각이 든다.
getter setter를 왜 사용하는가..

private를 관리하는 메서드. 


delete는 remove를 이용하자..
무엇을 참조하고 참조한게 주소인지 값인지를 생각하자..
지운다 라는 메서드를 만들 때 무엇이 조건인지 필요한지 생각해보자..
무작정 손부터 나가지 말고 머릿속으로 생각하고 시작하자..
여기까지 알면
수정 또는 리스트보기 검색 등 
조금만 생각해보면 생성가능한 메서드이다.

delete메서드를 찾을때 for문을 생성한다.
그 for문은 아이디를 찾는 반복문이다.
아이디를 찾는다는 것은 검색이나 입력에서도 응용할수 있다.
그래서 이 코드의 재사용성을 높이기 위해서 메서드를 분리한다.

접근제어자,매개변수 등 사용하는 이유를 확실히 알고 넘어가자 모를땐 주석처리를 하자!
메서드 정의 위치를 잘 생각해보자...

이렇게 학생관리와 교과목관리 클래스의 메소드를 생성!

로그인기능으로 마무리를 해본다.

로그인기능

public stu loginid(string id) {
int idx = fideid(id);
if(idx != -1){
return slist.get(idx);
}
return null;
}

로그인을 하게 되면
수강목록과 수강신청이 나오게 된다.
로그인은 학생한명이 하니 학생한명의클래스로 가서
수강신청과 목록을 선택하게 되니
교과목관리의 객체를 가지고 와야한다 
학생 한명은 교과목관리의 객체를 널값으로 저장하며 생성한다.
이때 수강신청을 하려면 교과목 리스트를 알아야하는데
partMge partMge = null;
객체를 가져오고, 















                       