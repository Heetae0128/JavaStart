예외처리
1. 에러(error) vs 예외(exception)를 구분

에러 - 컴파일이 안됨 > 실행이 안됨(실행전)

예외 - 실행중에 예기치 못한 이슈발생 > 실행은 됨 > 오작동 because 사전에 방지하고자 한다.
        Java에서는 예외를 처리해주는 객체 exception에서 정의
ex) null pointer ~
    indexoutof ~

예외처리가 뭐야?

실행중에 발생하는 예기치 않는 상황이다.
종류는 ex) 
null pointer가 나와 jvm을 공부했다.

예외처리방법 2가지

1. 직접처리 Try catch

2. 떠넘기기 (누구에게? call한 위치로)
메서드명() throws exception
메서드에서 exception 발생시 나를 call한 메서드가 처리

JVM에 있는 데이터를 ORACLE로 넘기거나
반대일경우에 DTO를 사용한다.

메서드명에 DTO를 연결하여 사용한다.

자바에 있는객체와 오라클에 있는 튜플 데이터

RAM 에는 jvm, oracle이 <따로> 있다. 독립적!

오라클에서 만든 라이브러리(자바 소스파일 묶음)를 배포한다. 

라이브러리 뭐 써봤어요?
배포된 라이브러리는 jdbc입니다.
파일형식 JAR File입니다.

1. 컨셉의 이해

2. 배포한 라이브러리를 가져옴 - ojdbc6.jar를 적당한 위치라고 생각되는 워크스페이스에 저장
  1) 프로젝트에 라이브러리 빌드...(빌드는 생성하여 준비하다)
    >> 이클립스 기준으로 프로젝트 우클릭 후 builsd path
  2) 라이브러리로 부터 필요한 드라이버를 로드한다. <한번만 하면됨>
    >> 클래스 구조를 좀 변경하고 감 . 이유는 현실적으로 디자인하려고

3. 안에 있는 객체를 사용.

